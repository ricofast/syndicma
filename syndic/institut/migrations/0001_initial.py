# Generated by Django 3.0.5 on 2021-01-28 15:51

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields
import opencourse.institut.formatChecker
import opencourse.institut.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Academicyear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=50, null=True)),
                ('name_ar', models.CharField(blank=True, max_length=50, null=True)),
                ('name_en', models.CharField(blank=True, max_length=50, null=True)),
                ('term', models.CharField(blank=True, max_length=50, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Academicyear',
                'verbose_name_plural': 'Academicyears',
                'permissions': (('manage_academicyear', 'Manage academicyear'),),
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendancedate', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('P', 'Present'), ('E', 'Excused Absence'), ('U', 'Unexcused Absence'), ('L', 'Late')], max_length=1)),
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendances',
                'permissions': (('manage_attendance', 'Manage attendance'),),
            },
        ),
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('name_fr', models.CharField(max_length=40, null=True)),
                ('name_ar', models.CharField(max_length=40, null=True)),
                ('name_en', models.CharField(max_length=40, null=True)),
                ('shortname', models.CharField(blank=True, max_length=25, null=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('tel1', models.CharField(blank=True, max_length=20, null=True)),
                ('tel2', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook', models.CharField(blank=True, max_length=60, null=True)),
                ('twiter', models.CharField(blank=True, max_length=60, null=True)),
                ('instagram', models.CharField(blank=True, max_length=60, null=True)),
                ('youtube', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.FileField(blank=True, null=True, upload_to='schools_pics/logos/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'bmp', 'svg', 'gif', 'png', 'ico'])])),
                ('picture1', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to=opencourse.institut.models.user_directory_path)),
                ('picture2', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to=opencourse.institut.models.user_directory_path)),
                ('picture3', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to=opencourse.institut.models.user_directory_path)),
                ('picture4', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to=opencourse.institut.models.user_directory_path)),
                ('created', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Center',
                'verbose_name_plural': 'Centers',
                'permissions': (('manage_center', 'Manage center'),),
            },
        ),
        migrations.CreateModel(
            name='Centerlevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('name_fr', models.CharField(max_length=40, null=True)),
                ('name_ar', models.CharField(max_length=40, null=True)),
                ('name_en', models.CharField(max_length=40, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Centerlevel',
                'verbose_name_plural': 'Centerlevels',
                'permissions': (('manage_centerlevel', 'Manage center level'),),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codepostal', models.CharField(blank=True, max_length=8, null=True)),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=60, null=True)),
                ('name_ar', models.CharField(blank=True, max_length=60, null=True)),
                ('name_en', models.CharField(blank=True, max_length=60, null=True)),
                ('category_1', models.SmallIntegerField(blank=True, null=True)),
                ('category_2', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('name_fr', models.CharField(max_length=40, null=True)),
                ('name_ar', models.CharField(max_length=40, null=True)),
                ('name_en', models.CharField(max_length=40, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(default=False)),
                ('section', models.CharField(blank=True, max_length=2, null=True)),
                ('allow_comments', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
                'permissions': (('manage_classe', 'Manage classe'),),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=65)),
                ('descrip', models.TextField(blank=True)),
                ('extrainfo', models.CharField(blank=True, max_length=250, null=True)),
                ('textbook', models.CharField(blank=True, max_length=100, null=True)),
                ('credit', models.SmallIntegerField(blank=True, null=True)),
                ('number_sessions', models.SmallIntegerField(blank=True, null=True)),
                ('picture', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='course_pics/%Y-%m-%d/')),
                ('syllabus', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='handouts/%Y-%m-%d/')),
                ('private', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'permissions': (('manage_course', 'Manage course'),),
            },
        ),
        migrations.CreateModel(
            name='Coursearea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=30, null=True)),
                ('name_ar', models.CharField(blank=True, max_length=30, null=True)),
                ('name_en', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
            },
        ),
        migrations.CreateModel(
            name='CourseGrades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('grade', models.FloatField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CourseGrades',
                'verbose_name_plural': 'CourseGrades',
                'permissions': (('manage_coursegrades', 'Manage Course_Grades'),),
            },
        ),
        migrations.CreateModel(
            name='CourseLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=30, null=True)),
                ('name_ar', models.CharField(blank=True, max_length=30, null=True)),
                ('name_en', models.CharField(blank=True, max_length=30, null=True)),
                ('tag', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='CourseOutline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('datedue', models.DateTimeField(blank=True, null=True)),
                ('weekdue', models.SmallIntegerField(blank=True, null=True)),
                ('document', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='handouts/%Y-%m-%d/')),
            ],
            options={
                'verbose_name': 'CourseOutline',
                'verbose_name_plural': 'CourseOutline',
                'permissions': (('manage_courseoutline', 'Manage Course_Outline'),),
            },
        ),
        migrations.CreateModel(
            name='Coursetime',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('courseday', models.SmallIntegerField(blank=True, null=True)),
                ('starttime', models.TimeField(blank=True, null=True)),
                ('endtime', models.TimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Coursetime',
                'verbose_name_plural': 'Coursetimes',
                'permissions': (('manage_coursetime', 'Manage course time'),),
            },
        ),
        migrations.CreateModel(
            name='CourseWork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('dateposted', models.DateTimeField(auto_now=True, null=True)),
                ('datedue', models.DateTimeField(blank=True, null=True)),
                ('weekdue', models.SmallIntegerField(blank=True, null=True)),
                ('graded', models.NullBooleanField()),
                ('document', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='handouts/%Y-%m-%d/')),
            ],
            options={
                'verbose_name': 'CourseWork',
                'verbose_name_plural': 'CourseWork',
                'permissions': (('manage_coursework', 'Manage Course_Work'),),
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.NullBooleanField()),
            ],
            options={
                'verbose_name': 'Enrollment',
                'verbose_name_plural': 'Enrollment',
                'permissions': (('manage_enrollment', 'Manage enrollment'),),
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('name_fr', models.CharField(max_length=40, null=True)),
                ('name_ar', models.CharField(max_length=40, null=True)),
                ('name_en', models.CharField(max_length=40, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Grade',
                'verbose_name_plural': 'Grades',
                'permissions': (('manage_grade', 'Manage grade'),),
            },
        ),
        migrations.CreateModel(
            name='Handout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('link', embed_video.fields.EmbedVideoField(blank=True, null=True)),
                ('attachment', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='handouts/%Y-%m-%d/')),
            ],
            options={
                'verbose_name': 'Handout',
                'verbose_name_plural': 'Handout',
                'permissions': (('manage_handout', 'Manage handout'),),
            },
        ),
        migrations.CreateModel(
            name='HandoutSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('name_fr', models.CharField(max_length=40, null=True)),
                ('name_ar', models.CharField(max_length=40, null=True)),
                ('name_en', models.CharField(max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Holidays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=50, null=True)),
                ('name_ar', models.CharField(blank=True, max_length=50, null=True)),
                ('name_en', models.CharField(blank=True, max_length=50, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('type', models.CharField(choices=[('NH', 'National Holiday'), ('RH', 'Religious Holiday'), ('SB', 'School Break')], max_length=2)),
            ],
            options={
                'verbose_name': 'Holidays',
                'verbose_name_plural': 'Holidays',
                'permissions': (('manage_holidays', 'Manage holidays'),),
            },
        ),
        migrations.CreateModel(
            name='JoinRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.NullBooleanField()),
            ],
            options={
                'verbose_name': 'Join request',
                'verbose_name_plural': 'Join requests',
                'permissions': (('manage_join_request', 'Manage join request'),),
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=250)),
                ('attachment', opencourse.institut.formatChecker.ContentTypeRestrictedFileField(blank=True, null=True, upload_to='handouts/%Y-%m-%d/')),
                ('author_id', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='ParentNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=250)),
                ('parentread', models.BooleanField(default=False)),
                ('studentread', models.BooleanField(default=False)),
                ('notifydate', models.DateTimeField(default=datetime.datetime(2021, 1, 28, 15, 51, 19, 410441))),
                ('type', models.CharField(blank=True, max_length=1, null=True)),
                ('typeid', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'ParentNotification',
                'verbose_name_plural': 'ParentNotifications',
            },
        ),
        migrations.CreateModel(
            name='Schoolgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=50, null=True)),
                ('name_ar', models.CharField(blank=True, max_length=50, null=True)),
                ('name_en', models.CharField(blank=True, max_length=50, null=True)),
                ('shortname', models.CharField(blank=True, max_length=25, null=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('tel', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(blank=True, max_length=60, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook', models.CharField(blank=True, max_length=60, null=True)),
                ('twiter', models.CharField(blank=True, max_length=60, null=True)),
                ('instagram', models.CharField(blank=True, max_length=60, null=True)),
                ('youtube', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.FileField(blank=True, null=True, upload_to='schools_pics/logos/', validators=[django.core.validators.FileExtensionValidator(['jpeg', 'bmp', 'svg', 'gif', 'png', 'ico'])])),
            ],
            options={
                'verbose_name': 'Schoolgroup',
                'verbose_name_plural': 'Schoolgroups',
                'permissions': (('manage_schoolgroup', 'Manage schoolgroup'),),
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Bo', 'Book'), ('No', 'Notebook'), ('Pe', 'Ballpoint pens'), ('Pc', 'Pencil'), ('Co', 'Cover'), ('Ru', 'Ruler'), ('Er', 'Erasers'), ('Bi', '3-ring binder'), ('Sh', 'Sharpeners'), ('Hi', 'Highlighters'), ('Ma', 'Markers'), ('Gl', 'Glue Sticks'), ('Wp', 'Watercolor paints'), ('Cp', 'Colored pencils'), ('Fo', 'Folder'), ('Ti', 'Box of tissues'), ('Sc', 'Scissors'), ('Dp', 'Drawing Paper'), ('Ag', 'Agenda'), ('Sl', 'Slate'), ('Wp', 'White Paper Ram'), ('Ca', 'pencil case'), ('Cs', 'Compass'), ('Pr', 'Protractor'), ('Sq', 'Set Square'), ('Di', 'Dictionary'), ('Ot', 'Other')], max_length=2)),
                ('description', models.TextField(blank=True, max_length=100, null=True)),
                ('quantity', models.SmallIntegerField(blank=True, null=True)),
                ('required', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institut.Course')),
            ],
            options={
                'verbose_name': 'Supply',
                'verbose_name_plural': 'Supplies',
            },
        ),
    ]
